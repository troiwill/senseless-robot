<launch>
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
    <arg name="yaw"   default="0.0"/>
    <arg name="map_file"     default="$(find turtlebot3_navigation)/maps/map.yaml"/>
    <arg name="octomap_file" default=""/>
    <arg name="sim_ns" default="sim"/>
    <arg name="tf_prefix" default="tb3"/>

    <!-- EKF for global localization -->
    <include file="$(find senseless_robot_ros)/launch/includes/ekf.launch.xml">
        <arg name="start_x_pos" value="$(arg x_pos)"/>
        <arg name="start_y_pos" value="$(arg y_pos)"/>
        <arg name="start_yaw" value="$(arg yaw)"/>
        <arg name="tf_prefix" value="$(arg tf_prefix)"/>
        <arg name="world_frame" value="map"/>
        <arg name="map_frame" value="map"/>
    </include>

    <!-- Map server [optional] -->
    <group if="$(eval arg('map_file') != '')">
        <node pkg="map_server" name="map_server" type="map_server" required="true"
            args="$(arg map_file)"/>
    </group>

    <!-- Octomap [optional] -->
    <group if="$(eval arg('octomap_file') != '')">
        <remap from="projected_map" to="map" />
        <node pkg="octomap_server" type="octomap_server_node" name="octomap_server"
            args="$(arg octomap_file)">
            <param name="resolution" value="0.05" />
            <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
            <param name="frame_id" type="string" value="map" />
            <!-- maximum range to integrate (speedup!) -->
            <param name="sensor_model/max_range" value="30.0" />
            <param name="latch" value="true"/>
            <param name="pointcloud_min_z" value="-200.0"/>
            <param name="pointcloud_max_z" value="200.0"/>
            <remap from="cloud_in" to="/random/thing/" />
            <param name="pointcloud_min_z" value="-200.0"/>
            <param name="pointcloud_max_z" value="200.0"/>
            <param name="occupancy_min_z" value="0.02"/>
            <param name="occupancy_max_z" value="20"/>
        </node>
    </group>

    <!-- Fixes simulated odom transform to TB odom -->
    <node pkg="tf" type="static_transform_publisher" name="odom_to_sim_odom"
        args="0 0 0 0 0 0 $(arg tf_prefix)/odom $(arg tf_prefix)/$(arg sim_ns)/odom 100"/>

    <!-- Move base for navigation -->
    <include file="$(find senseless_robot_ros)/launch/includes/move_base.launch.xml">
        <arg name="model" value="senseless_waffle"/>
        <arg name="move_forward_only" value="false"/>
        <arg name="cmd_vel_topic" value="cmd_vel"/>
        <arg name="odom_topic" value="odom"/>
        <arg name="rosparam_tf_prefix" value="$(arg tf_prefix)"/>
        <arg name="map_topic" value="map"/>
    </include>

    <!-- Simulates the belief propagation -->
    <node pkg="senseless_robot_ros" type="simulated_motion_node" name="simulated_motion_node"
        required="true" output="screen"/>
    <group ns="$(arg sim_ns)">
        <include file="$(find senseless_robot_ros)/launch/includes/move_base.launch.xml">
            <arg name="model" value="senseless_waffle"/>
            <arg name="move_forward_only" value="false"/>
            <arg name="rosparam_tf_prefix" value="$(arg tf_prefix)/$(arg sim_ns)"/>
            <arg name="odom_topic" value="odom"/>
            <arg name="cmd_vel_topic" value="cmd_vel"/>
            <arg name="map_topic" value="/$(arg tf_prefix)/map"/>
        </include>        
    </group>
</launch>
